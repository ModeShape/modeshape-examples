<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.modeshape.example</groupId>
	<artifactId>modeshape-slf4j-logging-example</artifactId>
	<packaging>jar</packaging>
	<name>Example that uses ModeShape w/ SLF4J (and Log4J)</name>
	<description>A simple self-contained example application that creates an embedded ModeShape engine but uses the SLF4J logging factory (with Log4J).</description>
	<version>1.0-SNAPSHOT</version>
	<properties>
		<!-- Instruct the build to use only UTF-8 encoding for source code -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!--
		Global dependency version information
		-->
		<modeshape.version>3.0-SNAPSHOT</modeshape.version>
		<!--
		Maven plugin versions
		-->
		<maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
		<maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
		<maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
		<maven.install.plugin.version>2.3.1</maven.install.plugin.version>
		<maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
		<maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
		<maven.source.plugin.version>2.1.2</maven.source.plugin.version>
		<maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>
	</properties>
  <dependencyManagement>    
      <dependencies>
          <!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" section
               defaults for all of the modules we might need, but we still have to include in the 
               "dependencies" section the modules we DO need. The benefit is that we don't have to
               specify the versions of any of those modules.-->
          <dependency>
              <groupId>org.modeshape.bom</groupId>
              <artifactId>modeshape-bom-embedded</artifactId>
              <version>${modeshape.version}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>
      </dependencies>
  </dependencyManagement>
  <dependencies>
      <!-- This module is **explicitly** using a number of other modules, so we have to include
           them in the "dependencies" section. However, since we imported the ModeShape BOM in the
           "dependencyManagement" section, we don't have to include "scope" or "version". -->
      <dependency>
          <groupId>javax.jcr</groupId>
          <artifactId>jcr</artifactId>
      </dependency>
      <dependency>
          <groupId>org.modeshape</groupId>
          <artifactId>modeshape-jcr</artifactId>
      </dependency>
      <!-- Logging: use Log4J via SLF4J API -->
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
      </dependency>
	    <!-- We could use SL4J with any other binding, but here we'll use Log4J -->
  		<dependency>
  			  <groupId>org.slf4j</groupId>
  			  <artifactId>slf4j-log4j12</artifactId>
  		</dependency>
  		<dependency>
  			  <groupId>log4j</groupId>
  			  <artifactId>log4j</artifactId>
  		</dependency>
      <!-- Use JUnit for testing -->
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
      </dependency>
  </dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<includes>
							<include>**/*Test.java</include>
						</includes>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- Specify the compiler options and settings -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<showDeprecation>false</showDeprecation>
					<showWarnings>false</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<includes>
						<include>**/*TestCase.java</include>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
			<!-- Produce source jars during the 'verify' phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--
				Build a test-jar for each project, so that src/test/* resources and
				classes can be used in other projects. Also customize how the jar
				files are assembled.
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
				<executions>
					<execution>
						<id>test-jar</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>JBoss-Releases</id>
			<url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
		</repository>
	</repositories>
</project>
